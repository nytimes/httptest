pipeline:
  name: httptest
  identifier: httptest
  projectIdentifier: nytimes__devp_appdelivery_harness_test
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.nytimesOrgGhConnector
        repoName: httptest
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        identifier: default
        name: default
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: build
                  name: build
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:alpine
                    shell: Sh
                    command: |-
                      go install github.com/jstemmer/go-junit-report
                      go test -v 2>&1 ./... | go-junit-report > report.xml
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                    envVariables:
                      CGO_ENABLED: "0"
                      GOOS: linux
                  timeout: ""
                  type: Run
              - step:
                  identifier: test
                  name: test
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:alpine
                    shell: Sh
                    command: ./httptest
                    envVariables:
                      CGO_ENABLED: "0"
                      GOOS: linux
                      TEST_DIRECTORY: example-tests
                      TEST_ENV: dev
                      TEST_HOST: httpbin.org
                  timeout: ""
                  type: Run
                  when:
                    stageStatus: Success
                    condition: "false"
              - step:
                  identifier: publishdev
                  name: publish-dev
                  spec:
                    connectorRef: account.harnessImage
                    image: plugins/docker
                    settings:
                      build_args_from_env:
                        - DRONE_BRANCH
                        - DRONE_COMMIT
                      repo: nytimes/httptest
                      tags:
                        - dev
                  timeout: ""
                  type: Plugin
                  when:
                    condition: "false"
                    stageStatus: Success
              - step:
                  identifier: publish
                  name: publish
                  spec:
                    connectorRef: account.harnessImage
                    image: plugins/docker
                    settings:
                      auto_tag: "true"
                      build_args_from_env:
                        - DRONE_BRANCH
                        - DRONE_COMMIT
                      repo: nytimes/httptest
                  timeout: ""
                  type: Plugin
                  when:
                    stageStatus: Success
                    condition: "false"
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.kubernetesclusterconnector
              namespace: dv-cd
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
        type: CI
